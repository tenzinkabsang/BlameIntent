repositories {
    jcenter()
    mavenCentral()

    maven { url "https://repo.commonsware.com.s3.amazonaws.com" }
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

// query git for the SHA, Tag and commit count. Use these to automate versioning.
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.kabz.blameintent"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // remove mockRelease, it makes no fuck'n sense
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }

    // set unit test android.jar to return default values rather than throwing exceptions.
    testOptions {
        unitTests.returnDefaultValues = true
    }
}


ext {
    supportLibVersion = '23.4.0'
    mockitoVersion = '1.10.19'
    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
    junitVersion = '4.12'
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:palette-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:customtabs:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"

    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha2'

    /** copied **/
    compile 'com.google.code.gson:gson:2.6.+'
    compile 'com.squareup.retrofit2:retrofit:2.0.+'
    compile 'com.squareup.retrofit2:converter-gson:2.0.+'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.+'
    compile 'com.squareup.okhttp3:okhttp:3.3.+'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.+'
    compile 'io.reactivex:rxjava:1.1.+'
    compile 'io.reactivex:rxandroid:1.2.+'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'com.makeramen:roundedimageview:2.2.1'
    compile 'com.jakewharton.timber:timber:2.7.+'
    compile 'uk.co.chrisjenx:calligraphy:2.2.+'

    compile 'com.google.android.gms:play-services-analytics:9.0.2'
    compile 'com.google.android.gms:play-services-gcm:9.0.2'


    compile 'com.jakewharton:butterknife:8.0.1'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'

    // dagger 2 dependencies
    apt 'com.google.dagger:dagger-compiler:2.2'
    compile 'com.google.dagger:dagger:2.2'
    provided 'javax.annotation:jsr250-api:1.0'
    /** end **/

    compile "com.google.guava:guava:18.0"

//    provided 'com.google.auto.value:auto-value:1.2'
//    apt 'com.google.auto.value:auto-value:1.2'

    // Dependencies for local unit tests
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powerMockito}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockito}"


    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile "com.android.support:support-annotations:${supportLibVersion}"
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${supportLibVersion}"
        force "com.android.support:support-v4:${supportLibVersion}"
        force "com.android.support:recyclerview-v7:${supportLibVersion}"
    }
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

